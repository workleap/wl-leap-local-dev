steps:
  # On macOS, Leap attempt to update the hosts file by using an interactive command to elevate permissions.
  # This is not possible in a CI environment, so we have to update the hosts file manually.
  # Leap will consider the hosts file as already up-to-date.
  - bash: |
      set -x
      sudo sh -c 'echo "# Begin lines managed by Leap CLI" >> /etc/hosts' && \
      sudo sh -c 'echo "127.0.0.1 aspnetcorewebapi.workleap.localhost" >> /etc/hosts' && \
      sudo sh -c 'echo "127.0.0.1 containerapp.workleap.localhost" >> /etc/hosts' && \
      sudo sh -c 'echo "127.0.0.1 mongo" >> /etc/hosts' && \
      sudo sh -c 'echo "# End lines managed by Leap CLI" >> /etc/hosts'
    displayName: "macOS: Update hosts file"
    condition: eq(variables['Agent.OS'], 'Darwin')

  # AzureCLI is required because we do check if the user is logged in when "az" is installed.
  # TODO: Prevent code duplication by parameterizing the scriptPath if possible.
  - task: AzureCLI@2
    displayName: "Linux: Execute leap run"
    inputs:
      azureSubscription: "ARM - gsoft-idp-dev"
      scriptType: pscore
      scriptLocation: scriptPath
      scriptPath: "./.ado/pipelines/templates/leap-run-linux.ps1"
    condition: eq(variables['Agent.OS'], 'Linux')

  - task: AzureCLI@2
    displayName: "macOS: Execute leap run"
    inputs:
      azureSubscription: "ARM - gsoft-idp-dev"
      scriptType: pscore
      scriptLocation: scriptPath
      scriptPath: "./.ado/pipelines/templates/leap-run-macos.ps1"
    condition: eq(variables['Agent.OS'], 'Darwin')

  - task: AzureCLI@2
    displayName: "Windows: Execute leap run"
    inputs:
      azureSubscription: "ARM - gsoft-idp-dev"
      scriptType: pscore
      scriptLocation: scriptPath
      scriptPath: "./.ado/pipelines/templates/leap-run-windows.ps1"
    condition: eq(variables['Agent.OS'], 'Windows_NT')
