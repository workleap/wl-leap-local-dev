trigger: none

name: 1.0.$(Rev:r)

jobs:
  - job: build
    strategy:
      matrix:
        linux:
          imageName: "ubuntu-latest"
        mac:
          imageName: "macOS-latest"
        windows:
          imageName: "windows-latest"
    pool:
      vmImage: $(imageName)

    steps:
      - checkout: self
        clean: true
        fetchDepth: 1

      - task: UseDotNet@2
        displayName: "Use .NET SDK"
        inputs:
          packageType: sdk
          useGlobalJson: true

      - task: PowerShell@2
        displayName: "Restore, build, test and pack"
        inputs:
          targetType: "filePath"
          filePath: "Build.ps1"
          pwsh: true

      - task: NuGetAuthenticate@1
        displayName: "NuGet authenticate"

      - bash: |
          set -x
          sudo apt install libnss3-tools -y && \
          curl -JLO "https://dl.filippo.io/mkcert/latest?for=linux/amd64" && \
          chmod +x mkcert-v*-linux-amd64 && \
          sudo cp mkcert-v*-linux-amd64 /usr/local/bin/mkcert && \
          mkcert -install
        condition: eq(variables.imageName, 'ubuntu-latest')
        displayName: "Linux: Install mkcert"

      - task: AzureCLI@2
        displayName: "Execute leap run"
        inputs:
          azureSubscription: "ARM - gsoft-idp-dev"
          scriptType: pscore
          scriptLocation: inlineScript
          inlineScript: |
            @"
            dependencies:
              - type: mongo
              - type: redis
              - type: postgres
              - type: sqlserver
              - type: azurite
                containers:
                  - mycontainer
                tables:
                  - mytable
                queues:
                  - myqueue
            "@ | Set-Content -Path leap.yaml -Force && `
            `
            dotnet tool update workleap.leap --global --add-source ".output" --verbosity minimal --no-cache && `
            leap run && `
            dotnet tool uninstall workleap.leap --global

        # TODO It does't seem easy to rely on Docker for testing on Windows & macOS, try again another time
        condition: eq(variables.imageName, 'ubuntu-latest')

      - template: templates/docker-container-check.yml
        parameters:
          containerName: "leap-mongo"

      - template: templates/docker-container-check.yml
        parameters:
          containerName: "leap-redis"

      - template: templates/docker-container-check.yml
        parameters:
          containerName: "leap-postgres"

      - template: templates/docker-container-check.yml
        parameters:
          containerName: "leap-sqlserver"

      - template: templates/docker-container-check.yml
        parameters:
          containerName: "leap-azurite"

      - task: NuGetCommand@2
        condition: eq(variables.imageName, 'ubuntu-latest')
        inputs:
          command: push
          publishVstsFeed: "gsoftdev"
          packagesToPush: ".output/*.nupkg"
          allowPackageConflicts: false
