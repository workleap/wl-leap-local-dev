trigger: none

jobs:
  - job: build
    strategy:
      matrix:
        linux:
          imageName: "ubuntu-latest"
        mac:
          imageName: "macOS-latest"
        windows:
          imageName: "windows-latest"
    pool:
      vmImage: $(imageName)

    steps:
      - checkout: self
        clean: true
        fetchDepth: 0

      - task: UseDotNet@2
        displayName: "Use .NET SDK"
        inputs:
          packageType: sdk
          useGlobalJson: true

      - script: |
          dotnet workload install aspire
        displayName: Install Aspire workload

      - task: PowerShell@2
        displayName: "Pack and install"
        inputs:
          targetType: "filePath"
          filePath: "BuildAndInstall.ps1"
          pwsh: true

      - template: templates/install-mkcert.yml

      - task: AzureCLI@2
        displayName: "Execute leap run"
        inputs:
          azureSubscription: "ARM - gsoft-idp-dev"
          scriptType: pscore
          scriptLocation: scriptPath
          scriptPath: ".ado/pipelines/templates/leap-run.ps1"
        condition: eq(variables.imageName, 'ubuntu-latest')

      - template: templates/docker-container-check.yml
        parameters:
          containerName: "leap-mongo"

      - template: templates/docker-container-check.yml
        parameters:
          containerName: "leap-redis"

      - template: templates/docker-container-check.yml
        parameters:
          containerName: "leap-postgres"

      - template: templates/docker-container-check.yml
        parameters:
          containerName: "leap-sqlserver"

      - template: templates/docker-container-check.yml
        parameters:
          containerName: "leap-azurite"

      - template: templates/docker-container-check.yml
        parameters:
          containerName: "leap-eventgrid"

      - task: NuGetAuthenticate@1
        condition: eq(variables.imageName, 'ubuntu-latest')
        displayName: "NuGet authenticate"

      - task: NuGetCommand@2
        condition: eq(variables.imageName, 'ubuntu-latest')
        inputs:
          command: push
          publishVstsFeed: "gsoftdev"
          packagesToPush: ".output/*.nupkg"
          allowPackageConflicts: false

      - task: PublishPipelineArtifact@1
        inputs:
          targetPath: "./.output/"
          artifactName: LeapNugetPackage
        condition: eq(variables.imageName, 'windows-latest')

  - job: testPackage
    displayName: Test package from other OS
    dependsOn: build

    pool:
      vmImage: ubuntu-latest

    variables:
      imageName: ubuntu-latest

    steps:
      - checkout: self
        clean: true
        fetchDepth: 0

      - task: UseDotNet@2
        displayName: "Use .NET SDK"
        inputs:
          packageType: sdk
          useGlobalJson: true

      - task: DownloadPipelineArtifact@2
        inputs:
          artifact: LeapNugetPackage
          targetPath: "./.output/"

      - script: |
          dotnet workload install aspire
        displayName: Install Aspire workload


      - task: PowerShell@2
        displayName: "Install Leap"
        inputs:
          targetType: "filePath"
          filePath: "Install.ps1"
          pwsh: true

      - template: templates/install-mkcert.yml

      - task: AzureCLI@2
        displayName: "Execute leap run"
        inputs:
          azureSubscription: "ARM - gsoft-idp-dev"
          scriptType: pscore
          scriptLocation: scriptPath
          scriptPath: ".ado/pipelines/templates/leap-run.ps1"
