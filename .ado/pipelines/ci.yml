trigger: none

jobs:
  - job: build
    pool:
      vmImage: "ubuntu-latest"

    steps:
      - checkout: self
        clean: true
        fetchDepth: 0

      - task: UseDotNet@2
        displayName: "Install .NET SDK from global.json"
        inputs:
          packageType: "sdk"
          useGlobalJson: true

      - pwsh: "./Build.ps1"
        displayName: "Build"

      - task: NuGetAuthenticate@1
        displayName: "NuGet authenticate"

      - task: NuGetCommand@2
        displayName: "NuGet push"
        inputs:
          command: push
          publishVstsFeed: "gsoftdev"
          packagesToPush: "./.output/*.nupkg"
          allowPackageConflicts: true

      - task: PublishPipelineArtifact@1
        displayName: "Publish built artifacts"
        inputs:
          targetPath: "./.output/"
          artifactName: LeapNugetPackage

  - job: test
    dependsOn: build
    timeoutInMinutes: 10
    strategy:
      matrix:
        linux:
          imageName: "ubuntu-latest"
        macos:
          imageName: "macOS-latest"
        windows:
          imageName: "windows-latest"
    pool:
      vmImage: $(imageName)

    steps:
      - checkout: self
        clean: true
        fetchDepth: 1

      - task: UseDotNet@2
        displayName: "Install .NET SDK from global.json"
        inputs:
          packageType: sdk
          useGlobalJson: true

      - task: DownloadPipelineArtifact@2
        displayName: "Download built artifacts"
        inputs:
          artifact: LeapNugetPackage
          targetPath: "./.output/"

      - pwsh: "./Install.ps1"
        displayName: "Install Leap"

      - template: templates/install-mkcert.yml

      - template: templates/leap-run.yml
